Coursera - Developing Data Products Project
========================================================
author: Huang Yinning
date: 22/Jun/2015

San Francisco Crime Data Explorer
========================================================

From 1934 to 1963, San Francisco was infamous for housing some of the world's most notorious criminals on the inescapable island of Alcatraz.

Today, the city is known more for its tech scene than its criminal past. But, with rising wealth inequality, housing shortages, and a proliferation of expensive digital toys riding BART to work, there is no scarcity of crime in the city by the bay.

About the dataset
========================================================

- From Sunset to SOMA, and Marina to Excelsior, the dataset taken from Kaggle's competition provides nearly 12 years of crime reports from across all of San Francisco's neighborhoods.

- However, in order to shorten the processing time, only 10% of the data is randomly sampled to illustrate the use of this data explorer app


Column names of dataset
========================================================

```{r}
training <- read.csv("./data/training.csv")
names(training)
```


Build Cool plot like this using the app!!
========================================================

```{r echo=FALSE}
# Working with Date and Time
library(lubridate)
library(dplyr)
library(ggplot2)
training$Dates <- as.POSIXct(strptime(training$Dates, format = "%Y-%m-%d %H:%M:%S"))
training$Date <- as.Date(training$Dates)
training$Time <- format(training[,"Dates"], "%H:%M:%S")
training$TimeCategory <- as.factor(ifelse(hour(training$Dates) >= 7 & hour(training$Dates) < 19, "DayTime", "NightTime"))
training$Year <- year(training$Date)

plot_by_year_and_timeofday <- function(df){
    ggplot(df, aes(x=Year, y=Count, color=TimeCategory)) +
        geom_point(color="blue") + geom_line() +
        scale_x_continuous(breaks=min(df$Year):max(df$Year)) +
        #ylim(0,160000) +
        labs(x="Year", y="Counts of crime", title="Number of counts of crime by Year") +
        theme_bw() +
        theme(title = element_text(face="bold"))
}

aggregate_by_year_and_timeofday <- function(df, year_min, year_max, category, time_of_day) {
    
    
    # Create T1 (Total Counts by year)
    t1 <- df %>% filter(Year >= year_min, Year <= year_max, Category %in% category) %>%
            # Group and aggregate
            group_by(Year) %>% summarise(Count = sum(Category))
    t1$TimeCategory <- "AllDay"
    t1 <- t1[,c(1,3,2)]
   
        
    # Create T2 
    t2 <- df %>% filter(Year >= year_min, Year <= year_max, Category %in% category, TimeCategory %in% time_of_day) %>%
            # Group and aggregate
            group_by(Year, TimeCategory) %>% summarise(Count = sum(Category)) 
    
    # Return final df
    rbind(t1,t2)
}

 df <- training
 year_min <- min(df$Year)
 year_max <- max(df$Year)
 category <- df$Category
 time_of_day <- c("DayTime", "NightTime", "AllDay")


plot_by_year_and_timeofday(aggregate_by_year_and_timeofday(df, year_min, year_max, category, time_of_day))

```

